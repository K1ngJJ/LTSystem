@model List<LTS_app.Models.Committee>

@{
    ViewData["Title"] = "Committees";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
<link rel="stylesheet" href="~/assets/css/styles.min.css" />

<div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
     data-sidebar-position="fixed" data-header-position="fixed">
    <!-- Main wrapper -->
    <div class="body-wrapper">
        <div class="container-fluid mt-3">
            <div class="card">
                <div class="table-responsive card-body">
                    <h5 class="card-title fw-semibold mb-4">Committees</h5>
                    <p class="mb-0">Manage legislative committees.</p>
                </div>
            </div>

            <div class="d-flex gap-2 mb-3">
                @if (User.IsInRole("Admin"))
                {
                    <button class="btn btn-primary btn-sm" onclick="openCreateModal()">
                        <i class="bi bi-plus-circle"></i> Add Committee
                    </button>
                }
                <a href="@Url.Action("Dashboard", User.IsInRole("Admin") ? "Admin" : "Legislator")" class="btn btn-secondary btn-sm">Dashboard</a>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="committeesTable" class="table table-sm table-striped table-bordered">
                            <thead class="table-dark small">
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Date Created</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody class="small">
                                @foreach (var committee in Model)
                                {
                                    <tr>
                                        <td>@committee.Name</td>
                                        <td>@committee.Description</td>
                                        <td>@committee.CreatedAt.ToString("MMMM dd, yyyy")</td>
                                        <td>
                                            <button class="btn btn-primary btn-sm"
                                                    onclick="openMembersModal(@committee.Id, '@committee.Name')">
                                                <i class="bi bi-people"></i>
                                            </button>
                                            <button class="btn btn-info btn-sm"
                                                    onclick="openViewModal('@committee.Name', '@committee.Description', '@committee.CreatedAt.ToString("MMMM dd, yyyy")')">
                                                <i class="bi bi-eye"></i>
                                            </button>

                                            @if (User.IsInRole("Admin"))
                                            {
                                                <button class="btn btn-warning btn-sm"
                                                        onclick="openEditModal('@committee.Id', '@committee.Name', '@committee.Description')">
                                                    <i class="bi bi-pencil-square"></i>
                                                </button>
                                                <button class="btn btn-danger btn-sm"
                                                        onclick="setDeleteCommittee(@committee.Id, '@committee.Name')"
                                                        data-bs-toggle="modal" data-bs-target="#deleteCommitteeModal">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- Success Message -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success text-center">
                    @TempData["SuccessMessage"]
                </div>
            }
        </div>
    </div>
</div>

<!-- View Committee Modal -->
<div class="modal fade" id="viewCommitteeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Committee Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><strong>Name:</strong> <span id="viewCommitteeName"></span></p>
                <p><strong>Description:</strong> <span id="viewCommitteeDescription"></span></p>
                <p><strong>Date Created:</strong> <span id="viewCommitteeDate"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Committee Members Modal -->
<div class="modal fade" id="membersModal" tabindex="-1" aria-labelledby="membersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="membersModalLabel">Committee Members</h5>
                <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h6>Committee: <span id="committeeName"></span></h6>
                <table id="membersTable" class="table table-sm table-bordered text-small">
                    <thead class="table-dark small">
                        <tr>
                            <th>Name</th>
                            <th>Position</th>
                            <th>Admin</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="membersList">
                        <tr>
                            <td colspan="4" class="text-center">No members found.</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    <!-- Create Committee Modal -->
    <div class="modal fade" id="createCommitteeModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Committee</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="Create">
                        <div class="mb-3">
                            <label class="form-label">Name:</label>
                            <input type="text" name="Name" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description:</label>
                            <textarea name="Description" class="form-control" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Assign Legislators:</label>
                            <select name="LegislatorIds" class="form-select" multiple>
                                @if (ViewBag.Legislators != null)
                                {
                                    var legislators = ViewBag.Legislators as List<LTS_app.Models.Legislator>;
                                    var availableLegislators = legislators?.Where(l => l.CommitteeLegislators == null || !l.CommitteeLegislators.Any()).ToList();

                                    if (availableLegislators != null && availableLegislators.Any())
                                    {
                                        @foreach (var legislator in availableLegislators)
                                        {
                                            <option value="@legislator.Id">
                                                @($"{legislator.User?.FullName ?? "Unknown"} ({legislator.Position})")
                                            </option>
                                        }
                                    }
                                    else
                                    {
                                        <option disabled>No available legislators.</option>
                                    }
                                }
                                else
                                {
                                    <option disabled>No legislators found.</option>
                                }
                            </select>

                            <small class="form-text text-muted">Hold Ctrl (Cmd on Mac) to select multiple legislators.</small>
                        </div>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


<!-- Edit Committee Modal -->
<div class="modal fade" id="editCommitteeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Committee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form method="post" id="editCommitteeForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="Id" id="editCommitteeId" />

                    <div class="mb-3">
                        <label class="form-label">Name:</label>
                        <input type="text" name="Name" id="editCommitteeName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description:</label>
                        <textarea name="Description" id="editCommitteeDescription" class="form-control" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Assign Legislators:</label>
                            <select name="LegislatorIds" id="editCommitteeLegislators" class="form-select" multiple>
                                @if (ViewBag.Legislators != null)
                                {
                                    var legislators = ViewBag.Legislators as List<LTS_app.Models.Legislator>;
                                    var assignedLegislators = ViewBag.AssignedLegislators as List<int> ?? new List<int>();

                                    if (legislators != null && legislators.Any())
                                    {
                                        @foreach (var legislator in legislators)
                                        {
                                            bool isSelected = assignedLegislators.Contains(legislator.Id);
                                            <option value="@legislator.Id" selected="@(isSelected ? "selected" : null)">
                                                @($"{legislator.User?.FullName ?? "Unknown"} ({legislator.Position})")
                                            </option>
                                        }
                                    }
                                    else
                                    {
                                        <option disabled>No available legislators.</option>
                                    }
                                }
                                else
                                {
                                    <option disabled>No legislators found.</option>
                                }
                            </select>

                        <small class="form-text text-muted">Hold Ctrl (Cmd on Mac) to select multiple legislators.</small>
                    </div>
                    <button type="submit" class="btn btn-warning">Save Changes</button>
                </form>

            </div>
        </div>
    </div>
</div>


    <!-- Delete Committee Modal -->
    <div class="modal fade" id="deleteCommitteeModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Committee</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete <strong id="deleteCommitteeName"></strong>?</p>
                    <form method="post" asp-action="Delete">
                        <input type="hidden" name="id" id="deleteCommitteeId" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/js/session_management.js"></script>
    <script src="~/assets/libs/jquery/dist/jquery.min.js"></script>
    <script src="~/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/sidebarmenu.js"></script>
    <script src="~/assets/js/app.min.js"></script>
    <script src="~/assets/libs/simplebar/dist/simplebar.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.8/dist/iconify-icon.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#committeesTable').DataTable({
                "paging": true,
                "lengthMenu": [ [10, 25, 50, -1], [10, 25, 50, "All"] ],
                "searching": true,
                "ordering": true,
                "info": true,
                "language": {
                    "search": "🔍",
                    "searchPlaceholder": "Search...",
                    "lengthMenu": "Show _MENU_ committees",
                    "info": "Showing _START_ to _END_ of _TOTAL_ Committees",
                    "paginate": {
                        "previous": "«",
                        "next": "»"
                    }
                }
            });
        });
    </script>

    <script>
               function openMembersModal(committeeId, committeeName) {
            $("#committeeName").text(committeeName);
            $("#membersList").html('<tr><td colspan="4" class="text-center">Loading...</td></tr>');

            $.ajax({
                url: `/Committee/GetCommitteeMembers/${committeeId}?_=${new Date().getTime()}`, // Prevent caching
                type: "GET",
                success: function (data) {
                    console.log("API Response:", data);
                    let rows = "";

                    // Destroy DataTable if it exists
                    if ($.fn.DataTable.isDataTable("#membersTable")) {
                        $("#membersTable").DataTable().clear().destroy();
                    }

                    if (Array.isArray(data) && data.length > 0) {
                        data.forEach(member => {
                            let fullName = member.fullName ?? "N/A";
                            let position = member.position ?? "Unknown";
                            let isAdmin = member.isAdmin
                                ? `<span class="badge bg-success">Admin</span>
                                   <button class="btn btn-outline-danger btn-sm ms-1" onclick="toggleAdmin(${committeeId}, ${member.legislatorId})">
                                       <i class="bi bi-person-dash"></i>
                                   </button>`
                                : `<button class="btn btn-outline-success btn-sm" onclick="toggleAdmin(${committeeId}, ${member.legislatorId})">
                                       <i class="bi bi-person-check"></i>
                                   </button>`;

                            rows += `
                                <tr id="memberRow-${committeeId}-${member.legislatorId}">
                                    <td>${fullName}</td>
                                    <td>${position}</td>
                                    <td id="adminColumn-${member.legislatorId}">${isAdmin}</td>
                                    <td>
                                        <button class="btn btn-danger btn-sm" onclick="deleteMember(${committeeId}, ${member.legislatorId})">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>`;
                        });
                    } else {
                        rows = '<tr><td colspan="4" class="text-center">No members found.</td></tr>';
                    }

                    $("#membersList").html(rows);

                    // Reinitialize DataTable
                    $("#membersTable").DataTable({
                        "paging": true,
                        "lengthMenu": [[5, 10, 25, -1], [5, 10, 25, "All"]],
                        "searching": true,
                        "ordering": true,
                        "info": true,
                        "language": {
                            "search": "🔍",
                            "searchPlaceholder": "Search...",
                            "lengthMenu": "Show _MENU_ members",
                            "info": "Showing _START_ to _END_ of _TOTAL_ Members",
                            "paginate": {
                                "previous": "«",
                                "next": "»"
                            }
                        }
                    });
                },
                error: function (xhr) {
                    console.error("Error fetching committee members:", xhr);
                    $("#membersList").html('<tr><td colspan="4" class="text-center text-danger">Failed to load members.</td></tr>');
                }
            });

            $("#membersModal").modal("show");
        }


        function deleteMember(committeeId, legislatorId) {
            if (!confirm("Are you sure you want to remove this member?")) return;

            $.post("/Committee/RemoveCommitteeMember", { committeeId, legislatorId }, function (response) {
                if (response.success) {
                    $(`#memberRow-${committeeId}-${legislatorId}`).remove();
                    alert("Member removed successfully!");
                } else {
                    alert("Failed to remove member.");
                }
            }).fail(function () {
                alert("Error removing member.");
            });
        }

function toggleAdmin(committeeId, legislatorId) {
    $.ajax({
        url: `/Committee/SetCommitteeAdmin`,
        type: "POST",
        data: { committeeId: committeeId, legislatorId: legislatorId },
        success: function (response) {
            console.log("Admin status updated:", response);
            let adminCell = $(`#adminColumn-${legislatorId}`);
            
            if (response.isAdmin) {
                adminCell.html(`
                    <span class="badge bg-success">Admin</span>
                    <button class="btn btn-outline-danger btn-sm ms-1" onclick="toggleAdmin(${committeeId}, ${legislatorId})">
                        <i class="bi bi-person-dash"></i>
                    </button>
                `);
            } else {
                adminCell.html(`
                    <button class="btn btn-outline-success btn-sm" onclick="toggleAdmin(${committeeId}, ${legislatorId})">
                        <i class="bi bi-person-check"></i>
                    </button>
                `);
            }
        },
        error: function (xhr) {
            console.error("Error toggling admin:", xhr);
            alert("Failed to update admin status.");
        }
    });
}




    </script>

    <script>
        function openCreateModal() {
            var createModal = new bootstrap.Modal(document.getElementById('createCommitteeModal'));
            createModal.show();
        }

        function openEditModal(id, name, description, selectedLegislators) {
            console.log("Opening Edit Modal for Committee ID:", id); // Debugging

            document.getElementById("editCommitteeId").value = id;
            document.getElementById("editCommitteeName").value = name;
            document.getElementById("editCommitteeDescription").value = description;

            // Set form action dynamically
            document.getElementById("editCommitteeForm").action = "/Committee/Edit";

            // Reset all options first
            let legislatorSelect = document.getElementById("editCommitteeLegislators");
            for (let option of legislatorSelect.options) {
                option.selected = false;
            }

            // Select the legislators assigned to the committee
            if (selectedLegislators && selectedLegislators.length > 0) {
                selectedLegislators.forEach(legislatorId => {
                    let option = legislatorSelect.querySelector(`option[value='${legislatorId}']`);
                    if (option) {
                        option.selected = true;
                    }
                });
            }

            // Show the modal
            let editModal = new bootstrap.Modal(document.getElementById('editCommitteeModal'));
            editModal.show();
        }


        function openDeleteModal(id, name) {
            if (!id) {
                alert("Invalid ID!");
                return;
            }

            document.getElementById("deleteCommitteeId").value = id;
            document.getElementById("deleteCommitteeName").innerText = name;

            var deleteModal = new bootstrap.Modal(document.getElementById('deleteCommitteeModal'));
            deleteModal.show();
        }

            function setDeleteCommittee(id, name) {
                document.getElementById("deleteCommitteeId").value = id;
                document.getElementById("deleteCommitteeName").innerText = name;
            }

            $(document).ready(function () {
                $("#confirmDelete").click(function () {
                    var id = $("#deleteCommitteeId").val();
                    $.ajax({
                        url: "/Committee/Delete",
                        type: "POST",
                        data: { id: id, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                        success: function (response) {
                            if (response.success) {
                                $("#deleteCommitteeModal").modal("hide");
                                location.reload(); // Refresh page after deletion
                            } else {
                                alert("Error: " + response.message);
                            }
                        },
                        error: function () {
                            alert("Something went wrong!");
                        }
                    });
                });
            });

        function openViewModal(name, description, dateCreated) {
            $("#viewCommitteeName").text(name);
            $("#viewCommitteeDescription").text(description);
            $("#viewCommitteeDate").text(dateCreated);
            $("#viewCommitteeModal").modal("show");
        }
    </script>
}