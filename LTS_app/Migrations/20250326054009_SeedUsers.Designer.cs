// <auto-generated />
using System;
using LTS_app.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LTS_app.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250326054009_SeedUsers")]
    partial class SeedUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LTS_app.Models.Amendment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateProposed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("Amendments");
                });

            modelBuilder.Entity("LTS_app.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("IntroducedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("LTS_app.Models.BillHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionTaken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("BillHistories");
                });

            modelBuilder.Entity("LTS_app.Models.Committee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("LTS_app.Models.CommitteeLegislator", b =>
                {
                    b.Property<int>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CommitteeId", "LegislatorId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("CommitteeLegislators");
                });

            modelBuilder.Entity("LTS_app.Models.Legislator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Legislators");
                });

            modelBuilder.Entity("LTS_app.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("LTS_app.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("LTS_app.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 25, 14, 31, 30, 0, DateTimeKind.Unspecified),
                            Email = "pachecoking38@gmail.com",
                            FullName = "AdminFullName",
                            IsActive = true,
                            IsConfirmed = true,
                            PasswordHash = "feec62854fa4d276b9e7ca69d4f4d59c7d99017c7a0e680707f454f44cebdbcf",
                            ResetPasswordToken = "JuvOmbJBtfSk5Jd6AWnXjZdE9pkH0AuXRb1Xanfaovk=",
                            Role = "Admin",
                            Token = "x4lZ0qutV0i8WyGxID5F9DUGHkGV+1WCYkyWThB7WIo=",
                            UpdatedAt = new DateTime(2025, 3, 15, 6, 38, 6, 0, DateTimeKind.Unspecified),
                            Username = "TestAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 25, 14, 45, 2, 0, DateTimeKind.Unspecified),
                            Email = "squadquinx8@gmail.com",
                            FullName = "UserFullName",
                            IsActive = true,
                            IsConfirmed = true,
                            PasswordHash = "eb97d409396a3e5392936dad92b909da6f08d8c121a45e1f088fe9768b0c0339",
                            ResetPasswordToken = "G9Xu424cr46Mw0JfS1y64Ge4MRXp+T9cRcxib+o6Jc8=",
                            Role = "User",
                            Token = "GELmIj47BdHHLt/WvhuIM1EYcWbFkZglNDSv16EcKPw=",
                            UpdatedAt = new DateTime(2025, 3, 15, 6, 36, 7, 0, DateTimeKind.Unspecified),
                            Username = "TestUser"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 6, 40, 49, 0, DateTimeKind.Unspecified),
                            Email = "pachecoking57@gmail.com",
                            FullName = "Legislator FullName",
                            IsActive = true,
                            IsConfirmed = true,
                            PasswordHash = "e9e9dd69007f1b63a1aa09c17e6da5319611d1af436b077dfb2300e3caf43b65",
                            Role = "Legislator",
                            Token = "AITvRemizt/4Dd2ImQdEC/4Gt2OAns+cZRPJ7+Eyz4Y=",
                            Username = "TestLegislator"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 17, 3, 5, 1, 0, DateTimeKind.Unspecified),
                            Email = "legislator2@gmail.com",
                            FullName = "Legislator2 FullName",
                            IsActive = true,
                            IsConfirmed = true,
                            PasswordHash = "e9e9dd69007f1b63a1aa09c17e6da5319611d1af436b077dfb2300e3caf43b65",
                            Role = "Legislator",
                            Token = "M6G7TGnlU7j81rV5FSm06NBIZzYmPq3J206W6OC/+C8=",
                            UpdatedAt = new DateTime(2025, 3, 17, 3, 5, 10, 0, DateTimeKind.Unspecified),
                            Username = "TestLegislator2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 17, 6, 21, 19, 0, DateTimeKind.Unspecified),
                            Email = "legislator3@gmail.com",
                            FullName = "Legislator3 FullName",
                            IsActive = true,
                            IsConfirmed = true,
                            PasswordHash = "e9e9dd69007f1b63a1aa09c17e6da5319611d1af436b077dfb2300e3caf43b65",
                            Role = "Legislator",
                            Token = "xp130CmOrvhPxN3Ds68Hdmbz5QKDylBtktURJXZLUiQ=",
                            UpdatedAt = new DateTime(2025, 3, 17, 6, 21, 29, 0, DateTimeKind.Unspecified),
                            Username = "TestLegislator3"
                        });
                });

            modelBuilder.Entity("LTS_app.Models.UserFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFeedbacks");
                });

            modelBuilder.Entity("LTS_app.Models.UserLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("LTS_app.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Choice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateVoted")
                        .HasColumnType("datetime2");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("LTS_app.Models.Amendment", b =>
                {
                    b.HasOne("LTS_app.Models.Bill", "Bill")
                        .WithMany("Amendments")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LTS_app.Models.Legislator", "Legislator")
                        .WithMany()
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Legislator");
                });

            modelBuilder.Entity("LTS_app.Models.Bill", b =>
                {
                    b.HasOne("LTS_app.Models.Committee", "Committee")
                        .WithMany("Bills")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LTS_app.Models.Session", "Session")
                        .WithMany("Bills")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTS_app.Models.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LTS_app.Models.BillHistory", b =>
                {
                    b.HasOne("LTS_app.Models.Bill", "Bill")
                        .WithMany("BillHistories")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("LTS_app.Models.CommitteeLegislator", b =>
                {
                    b.HasOne("LTS_app.Models.Committee", "Committee")
                        .WithMany("CommitteeLegislators")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LTS_app.Models.Legislator", "Legislator")
                        .WithMany("CommitteeLegislators")
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Legislator");
                });

            modelBuilder.Entity("LTS_app.Models.Legislator", b =>
                {
                    b.HasOne("LTS_app.Models.User", "User")
                        .WithOne("Legislator")
                        .HasForeignKey("LTS_app.Models.Legislator", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LTS_app.Models.Notification", b =>
                {
                    b.HasOne("LTS_app.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LTS_app.Models.UserFeedback", b =>
                {
                    b.HasOne("LTS_app.Models.Bill", "Bill")
                        .WithMany("UserFeedbacks")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LTS_app.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LTS_app.Models.UserLog", b =>
                {
                    b.HasOne("LTS_app.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LTS_app.Models.Vote", b =>
                {
                    b.HasOne("LTS_app.Models.Bill", "Bill")
                        .WithMany("Votes")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LTS_app.Models.Legislator", "Legislator")
                        .WithMany("Votes")
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Legislator");
                });

            modelBuilder.Entity("LTS_app.Models.Bill", b =>
                {
                    b.Navigation("Amendments");

                    b.Navigation("BillHistories");

                    b.Navigation("UserFeedbacks");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("LTS_app.Models.Committee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CommitteeLegislators");
                });

            modelBuilder.Entity("LTS_app.Models.Legislator", b =>
                {
                    b.Navigation("CommitteeLegislators");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("LTS_app.Models.Session", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("LTS_app.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Legislator")
                        .IsRequired();

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
